{"version":3,"file":"Button.stories.d9b0b969.js","sources":["../../src/components/Button.tsx"],"sourcesContent":["import { Slot } from \"@radix-ui/react-slot\";\nimport { clsx } from \"clsx\";\nimport { ButtonHTMLAttributes, ReactNode } from \"react\";\nexport interface ButtonProps extends ButtonHTMLAttributes<HTMLButtonElement> {\n  children: ReactNode; //qualquer coisa valida dentro do react\n  aschild?: boolean;\n}\n\n//padrão medium\nexport function Button({\n  children,\n  aschild,\n  className,\n  ...props\n}: ButtonProps) {\n  const Comp = aschild ? Slot : \"button\";\n  return (\n    <Comp\n      className={clsx(\n        \"py-3 px-4 bg-purple-900 rounded font-semibold text-pink-100 text-sm w-full  transition-purple hover:bg-purple-500\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </Comp>\n  );\n}\n//com o clsx, eu digo: se a classe for 'text-xs', o texto vai ser sm (small)\n//px para rem IMPORTANTE\n//16px, se eu quero isso, tenho que fazer: 16:4 que da 4, sempre tem que da 4\n//se eu quero 12px, vai ser: 12 : 3=4, tenho que usar 3rem então\n//utilizamos padrão de multiplos de 4\n"],"names":["Button","children","aschild","className","_jsx","Slot","clsx","props","__name"],"mappings":"8QASO,SAAAA,EAAA,CAAgB,SAAAC,EACrBA,QAAAA,EACAC,UAAAA,KACAC,CAEW,EAAA,CAEX,OAAAC,EADAF,EAAAG,EAAA,SACA,CACO,UAAAC,EAAA,oHAAAH,CAAA,EAGQ,GAAAI,EAEPA,SAAAA,CAAK,CAAA,CAKf,CAlBOC,EAAAR,EAAA"}